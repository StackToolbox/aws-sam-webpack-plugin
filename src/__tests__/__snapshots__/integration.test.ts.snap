// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Happy path with VS Code debugging disabled 1`] = `
Object {
  "entryPoints": Object {
    "MyLambda": "./src/my-lambda/app",
  },
  "files": Object {
    ".aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
  },
}
`;

exports[`Happy path with an output file specified 1`] = `
Object {
  "entryPoints": Object {
    "MyLambda": "./src/my-lambda/app",
  },
  "files": Object {
    ".aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: index.handler
",
    ".vscode/launch.json": "{
  \\"version\\": \\"0.2.0\\",
  \\"configurations\\": [
    // BEGIN AwsSamPlugin
    {
      \\"name\\": \\"MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    }
    // END AwsSamPlugin
  ]
}",
  },
}
`;

exports[`Happy path with default constructor works 1`] = `
Object {
  "entryPoints": Object {
    "MyLambda": "./src/my-lambda/app",
  },
  "files": Object {
    ".aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
    ".vscode/launch.json": "{
  \\"version\\": \\"0.2.0\\",
  \\"configurations\\": [
    // BEGIN AwsSamPlugin
    {
      \\"name\\": \\"MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    }
    // END AwsSamPlugin
  ]
}",
  },
}
`;

exports[`Happy path with empty options in the constructor works 1`] = `
Object {
  "entryPoints": Object {
    "MyLambda": "./src/my-lambda/app",
  },
  "files": Object {
    ".aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
    ".vscode/launch.json": "{
  \\"version\\": \\"0.2.0\\",
  \\"configurations\\": [
    // BEGIN AwsSamPlugin
    {
      \\"name\\": \\"MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    }
    // END AwsSamPlugin
  ]
}",
  },
}
`;

exports[`Happy path with empty options in the constructor works and an existing .vscode folder 1`] = `
Object {
  "entryPoints": Object {
    "MyLambda": "./src/my-lambda/app",
  },
  "files": Object {
    ".aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
    ".vscode/launch.json": "{
  \\"version\\": \\"0.2.0\\",
  \\"configurations\\": [
    // BEGIN AwsSamPlugin
    {
      \\"name\\": \\"MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    }
    // END AwsSamPlugin
  ]
}",
  },
}
`;

exports[`Happy path with multiple projects and different template names works 1`] = `
Object {
  "entryPoints": Object {
    "a#MyLambda": "./project-a/src/my-lambda/app",
    "b#MyLambda": "./project-b/src/my-lambda/app",
  },
  "files": Object {
    ".vscode/launch.json": "{
  \\"version\\": \\"0.2.0\\",
  \\"configurations\\": [
    // BEGIN AwsSamPlugin
    {
      \\"name\\": \\"a:MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/project-a/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/project-a/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    },
    {
      \\"name\\": \\"b:MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/project-b/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/project-b/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    }
    // END AwsSamPlugin
  ]
}",
    "project-a/.aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
    "project-b/.aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
  },
}
`;

exports[`Happy path with multiple projects works 1`] = `
Object {
  "entryPoints": Object {
    "a#MyLambda": "./project-a/src/my-lambda/app",
    "b#MyLambda": "./project-b/src/my-lambda/app",
  },
  "files": Object {
    ".vscode/launch.json": "{
  \\"version\\": \\"0.2.0\\",
  \\"configurations\\": [
    // BEGIN AwsSamPlugin
    {
      \\"name\\": \\"a:MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/project-a/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/project-a/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    },
    {
      \\"name\\": \\"b:MyLambda\\",
      \\"type\\": \\"node\\",
      \\"request\\": \\"attach\\",
      \\"address\\": \\"localhost\\",
      \\"port\\": 5858,
      \\"localRoot\\": \\"\${workspaceFolder}/project-b/.aws-sam/build/MyLambda\\",
      \\"remoteRoot\\": \\"/var/task\\",
      \\"protocol\\": \\"inspector\\",
      \\"stopOnEntry\\": false,
      \\"outFiles\\": [
        \\"\${workspaceFolder}/project-b/.aws-sam/build/MyLambda/**/*.js\\"
      ],
      \\"sourceMaps\\": true,
      \\"skipFiles\\": [
        \\"/var/runtime/**/*.js\\",
        \\"<node_internals>/**/*.js\\"
      ]
    }
    // END AwsSamPlugin
  ]
}",
    "project-a/.aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
    "project-b/.aws-sam/build/template.yaml": "AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs20.x
Resources:
  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Handler: app.handler
",
  },
}
`;
